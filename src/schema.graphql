scalar JSON

enum ExecutionStatus {
  UNSPECIFIED
  RUNNING
  COMPLETED
  FAILED
  CANCELED
  TERMINATED
  CONTINUED_AS_NEW
  TIMED_OUT
}

type Workflow {
  id: ID!
  runId: ID!
  type: String!
  status: ExecutionStatus!
  taskQueue: String!
  result: JSON
  historyLength: PositiveInt!
  startTime: DateTime!
  closeTime: DateTime
  executionTime: DateTime
  parentExecution: Workflow
  memo: JSON
  searchAttributes: JSON
}

# TODO add rest https://typescript.temporal.io/api/interfaces/client.WorkflowOptions
input StartInput {
  type: String!
  taskQueue: String!
  args: JSON
  id: ID
}

input SignalInput {
  id: ID!
  name: String!
  args: JSON
  runId: ID
}

input QueryInput {
  id: ID!
  name: String!
  args: JSON
  runId: ID
}

input CancelInput {
  id: ID!
  runId: ID
}

input TerminateInput {
  id: ID!
  runId: ID
  reason: String
}

# https://typescript.temporal.io/api/interfaces/client.WorkflowSignalWithStartOptions
input SignalWithStartInput {
  id: ID!
  workflowType: String!
  args: JSON
  taskQueue: String!
  signal: String!
  signalArgs: JSON
}

type Query {
  workflow(id: ID!, runId: ID): Workflow
  query(input: QueryInput!): JSON
}

type Mutation {
  start(input: StartInput!): Workflow!
  signal(input: SignalInput!): Workflow!
  cancel(input: CancelInput!): Workflow!
  terminate(input: TerminateInput!): Workflow!
  signalWithStart(input: SignalWithStartInput!): Workflow!
}
